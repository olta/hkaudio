From 2c116477cd32411caca8802f9fdc6daa047b415b Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sun, 22 Dec 2024 14:22:17 +0100
Subject: [PATCH 2/2] Add resource management callout and pause if asked to.

---
 playback/src/player.rs | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

diff --git a/playback/src/player.rs b/playback/src/player.rs
index 43f6361..9ca3873 100644
--- a/playback/src/player.rs
+++ b/playback/src/player.rs
@@ -5,14 +5,14 @@ use std::{
     io::{self, Read, Seek, SeekFrom},
     mem,
     pin::Pin,
-    process::exit,
+    process::{Command, exit},
     sync::{
         atomic::{AtomicUsize, Ordering},
         Arc,
     },
     task::{Context, Poll},
     thread,
-    time::{Duration, Instant},
+    time::{Duration, Instant, SystemTime},
 };
 
 use futures_util::{
@@ -85,6 +85,8 @@ struct PlayerInternal {
 
     player_id: usize,
     play_request_id_generator: SeqGenerator<u64>,
+    
+    last_resource_check_time: SystemTime,
 }
 
 static PLAYER_COUNTER: AtomicUsize = AtomicUsize::new(0);
@@ -477,6 +479,8 @@ impl Player {
 
                 player_id,
                 play_request_id_generator: SeqGenerator::new(0),
+                
+                last_resource_check_time: SystemTime::UNIX_EPOCH,
             };
 
             // While PlayerInternal is written as a future, it still contains blocking code.
@@ -1666,6 +1670,17 @@ impl PlayerInternal {
                         error!("{}", e);
                         self.handle_pause();
                     }
+                    
+                    if SystemTime::now().duration_since(self.last_resource_check_time).unwrap().as_millis() > 500 {
+                        if Command::new("res-man.sh")
+                            .arg("should-stop")
+                            .arg("librespot")
+                            .status()
+                            .expect("failed to execute res-man.sh").success() {
+                            self.handle_pause();
+                        }
+                        self.last_resource_check_time = SystemTime::now();
+                    }
                 }
             }
 
-- 
2.25.1

