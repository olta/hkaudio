From 9d8c66d3489347d615c81d40dcde89d2f73e6259 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sun, 16 Feb 2025 13:48:54 +0000
Subject: [PATCH] Add resource management callouts

---
 output/driver-alsa.go |  7 +++++++
 player/player.go      | 10 ++++++++++
 2 files changed, 17 insertions(+)

diff --git a/output/driver-alsa.go b/output/driver-alsa.go
index 745f8e0..86065f2 100644
--- a/output/driver-alsa.go
+++ b/output/driver-alsa.go
@@ -11,6 +11,7 @@ import (
 	"errors"
 	"fmt"
 	"io"
+	"os/exec"
 	"sync"
 	"time"
 	"unsafe"
@@ -101,6 +102,12 @@ func (out *alsaOutput) alsaError(name string, err C.int) error {
 }
 
 func (out *alsaOutput) setupPcm() error {
+	cmd := exec.Command("res-man.sh", "switch-to", "go-librespot")
+	if err := cmd.Run(); err != nil {
+		out.log.WithError(err).Warnf("unable to use res-man to switch to go-librespot")
+		return err
+	}
+
 	cdevice := C.CString(out.device)
 	defer C.free(unsafe.Pointer(cdevice))
 	if err := C.snd_pcm_open(&out.pcmHandle, cdevice, C.SND_PCM_STREAM_PLAYBACK, 0); err < 0 {
diff --git a/player/player.go b/player/player.go
index 037e021..a2d4ec0 100644
--- a/player/player.go
+++ b/player/player.go
@@ -3,6 +3,11 @@ package player
 import (
 	"context"
 	"fmt"
+	"net/http"
+	"net/url"
+	"os/exec"
+	"time"
+
 	librespot "github.com/devgianlu/go-librespot"
 	"github.com/devgianlu/go-librespot/audio"
 	"github.com/devgianlu/go-librespot/output"
@@ -11,9 +16,6 @@ import (
 	"github.com/devgianlu/go-librespot/spclient"
 	"github.com/devgianlu/go-librespot/vorbis"
 	"golang.org/x/exp/rand"
-	"net/http"
-	"net/url"
-	"time"
 )
 
 const SampleRate = 44100
@@ -255,6 +257,10 @@ loop:
 					} else {
 						cmd.resp <- nil
 						p.ev <- Event{Type: EventTypePause}
+						cmd := exec.Command("res-man.sh", "mark-as-stopped", "go-librespot")
+						if err := cmd.Run(); err != nil {
+							p.log.WithError(err).Warnf("unable to use res-man to inform about stopped playback")
+						}
 					}
 				} else {
 					cmd.resp <- nil
@@ -265,6 +271,11 @@ loop:
 					out = nil
 					outErr = make(<-chan error)
 
+					cmd := exec.Command("res-man.sh", "mark-as-stopped", "go-librespot")
+					if err := cmd.Run(); err != nil {
+						p.log.WithError(err).Warnf("unable to use res-man to inform about stopped playback")
+					}
+
 					p.log.Tracef("closed output device because of stop command")
 				}
 
-- 
2.25.1
